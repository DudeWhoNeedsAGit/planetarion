services:
  test-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: planetarion_test
      POSTGRES_USER: planetarion_user
      POSTGRES_PASSWORD: planetarion_password
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planetarion_user -d planetarion_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.test
    environment:
      DATABASE_URL: postgresql://planetarion_user:planetarion_password@test-db:5432/planetarion_test
      FLASK_ENV: testing
      JWT_SECRET_KEY: test-jwt-secret-key-for-testing-only
    depends_on:
      test-db:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app/backend
    command: python -m pytest ../tests -v --tb=short

  test-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    ports:
      - "3000:3000"
    depends_on:
      - test-backend
    environment:
      REACT_APP_API_URL: http://test-backend:5000
    volumes:
      - ./frontend:/app
    command: npm run test:e2e

volumes:
  test_postgres_data:
